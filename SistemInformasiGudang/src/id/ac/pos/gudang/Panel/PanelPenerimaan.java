package id.ac.pos.gudang.Panel;

import id.ac.pos.gudang.Dialog.DialogTambahPenerimaan;
import javax.swing.JDialog;
import id.ac.pos.gudang.Form.FormHome;
import id.ac.pos.gudang.dao.PenerimaanDAO;
import id.ac.pos.gudang.dao.ProdukDAO;
import id.ac.pos.gudang.daoimpl.PenerimaanDAOImpl;
import id.ac.pos.gudang.entity.Pemesanan;
import id.ac.pos.gudang.entity.Penerimaan;
import id.ac.pos.gudang.entity.Produk;
import id.ac.pos.gudang.entity.Mitra;
import id.ac.pos.gudang.tablemodel.PenerimaanTM;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.TableRowSorter;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author reyha
 */
public class PanelPenerimaan extends javax.swing.JPanel {

    /**
     * Creates new form PanelPenerimaan
     */
    
    private Penerimaan penerimaan;
    private PenerimaanDAO dao;
    private ProdukDAO daoProduk;
    private Mitra mitra;
    ArrayList<Penerimaan> arrayPenerimaan;
    ArrayList<Produk> arrayProduk;
    ArrayList<Mitra> arraySuplier;
    ArrayList<Pemesanan> arrayPemesanan;
    TableRowSorter sorter;
    
    public PanelPenerimaan() {
        initComponents();       
        getDataPenerimaan();
    }
        
    public String cariData(String tabCari) {
        Object pilihanCari = "";
        if (tabCari.compareTo("PR") == 0) {
            pilihanCari = comboCariPenerimaanPrangko.getSelectedItem();
        } else if (tabCari.compareTo("KM") == 0) {
            pilihanCari = comboCariPenerimaanKemasan.getSelectedItem();
        } else if (tabCari.compareTo("SHP") == 0) {
            pilihanCari = comboCariPenerimaanSHP_SHPSS.getSelectedItem();
        } else if (tabCari.compareTo("SS") == 0) {
            pilihanCari = comboCariPenerimaanMS_SS.getSelectedItem();
        } else if (tabCari.compareTo("MC") == 0) {
            pilihanCari = comboCariPenerimaanMerchandise.getSelectedItem();
        } else if (tabCari.compareTo("PS") == 0) {
            pilihanCari = comboCariPenerimaanPrisma.getSelectedItem();
        } else if (tabCari.compareTo("DF") == 0) {
            pilihanCari = comboCariPenerimaanDF.getSelectedItem();
        }
              
        String jenisCari = null;

        if (pilihanCari == "Kode Produk") {
            jenisCari = "pr.id_produk";
        } else if (pilihanCari == "Nama Produk") {
            jenisCari = "nama_produk";
        } else if (pilihanCari == "Nama Mitra") {
            jenisCari = "nama_suplier";
        } else if (pilihanCari == "Nomor Pemesanan") {
            jenisCari = "no_pemesanan";
        } else if (pilihanCari == "Id Pemesanan") {
            jenisCari = "ps.id_pemesanan";
        } else if (pilihanCari == "Nominal") {
            jenisCari = "nominal";
        } else if (pilihanCari == "Tahun") {
            jenisCari = "tahun";
        } else if (pilihanCari == "Nomor Order") {
            jenisCari = "no_order_penerimaan";
        } else if (pilihanCari == "Tanggal Penerimaan") {
            jenisCari = "tgl_penerimaan";
        } 

        return jenisCari;

    }
    
    public String cariJenis(String tab) {
        String idJenis = "";

        if (tab.compareTo("prangko") == 0) {
            idJenis = "PR";
        } else if (tab.compareTo("kemasan") == 0) {
            idJenis = "KM";
        } else if (tab.compareTo("shp") == 0) {
            idJenis = "SHP";
        } else if (tab.compareTo("ss") == 0) {
            idJenis = "SS";
        } else if (tab.compareTo("mc") == 0) {
            idJenis = "MC";
        } else if (tab.compareTo("prisma") == 0) {
            idJenis = "PS";
        } else if (tab.compareTo("df") == 0) {
            idJenis = "DF";
        }

        return idJenis;
    }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonTambahPenerimaanDokumenFilateli = new javax.swing.JTabbedPane();
        Prangko3 = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        tablePenerimaanPrangko = new javax.swing.JTable();
        comboCariPenerimaanPrangko = new javax.swing.JComboBox<>();
        fieldCariPenerimaanPrangko = new javax.swing.JTextField();
        buttonCariPenerimaanPrangko = new javax.swing.JButton();
        buttonTambahPenerimaanPrangko = new javax.swing.JButton();
        MS_SS3 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        tablePenerimaanMS_SS = new javax.swing.JTable();
        comboCariPenerimaanMS_SS = new javax.swing.JComboBox<>();
        fieldCariPenerimaanMS_SS = new javax.swing.JTextField();
        buttonCariPenerimaanMS_SS = new javax.swing.JButton();
        buttonTambahPenerimaanMSSS = new javax.swing.JButton();
        SHP_SHPSS3 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        tablePenerimaanSHP_SHPSS = new javax.swing.JTable();
        comboCariPenerimaanSHP_SHPSS = new javax.swing.JComboBox<>();
        fieldCariPenerimaanSHP_SHPSS = new javax.swing.JTextField();
        buttonCariPenerimaanSHP_SHPSS = new javax.swing.JButton();
        buttonTambahPenerimaanSHPSS = new javax.swing.JButton();
        Kemasan3 = new javax.swing.JPanel();
        jPanel43 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        tablePenerimaanKemasan = new javax.swing.JTable();
        comboCariPenerimaanKemasan = new javax.swing.JComboBox<>();
        fieldCariPenerimaanKemasan = new javax.swing.JTextField();
        buttonCariPenerimaanKemasan = new javax.swing.JButton();
        buttonTambahPenerimaanKemasan = new javax.swing.JButton();
        Merchandise3 = new javax.swing.JPanel();
        jPanel44 = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        tablePenerimaanMerchandise = new javax.swing.JTable();
        comboCariPenerimaanMerchandise = new javax.swing.JComboBox<>();
        fieldCariPenerimaanMerchandise = new javax.swing.JTextField();
        buttonCariPenerimaanMerchandise = new javax.swing.JButton();
        buttonTambahPenerimaanMerchandise = new javax.swing.JButton();
        Prisma3 = new javax.swing.JPanel();
        jPanel45 = new javax.swing.JPanel();
        jScrollPane18 = new javax.swing.JScrollPane();
        tablePenerimaanPrisma = new javax.swing.JTable();
        comboCariPenerimaanPrisma = new javax.swing.JComboBox<>();
        fieldCariPenerimaanPrisma = new javax.swing.JTextField();
        buttonCariPenerimaanPrisma = new javax.swing.JButton();
        buttonTambahPenerimaanPrisma = new javax.swing.JButton();
        DokumenFilateli3 = new javax.swing.JPanel();
        jPanel46 = new javax.swing.JPanel();
        jScrollPane19 = new javax.swing.JScrollPane();
        tablePenerimaanDokumenFilateli = new javax.swing.JTable();
        comboCariPenerimaanDF = new javax.swing.JComboBox<>();
        fieldCariPenerimaanDF = new javax.swing.JTextField();
        buttonCariPenerimaanDF = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        buttonTambahPenerimaanDokumenFilateli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonTambahPenerimaanDokumenFilateliMouseClicked(evt);
            }
        });

        Prangko3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Prangko3MouseClicked(evt);
            }
        });

        jPanel40.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabel Data Produk"));

        tablePenerimaanPrangko.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePenerimaanPrangko.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePenerimaanPrangkoMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(tablePenerimaanPrangko);

        comboCariPenerimaanPrangko.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nomor Order", "Tanggal Penerimaan", "Nomor Pemesanan", "Kode Produk", "Nama Produk", "Nominal", "Tahun", "Nama Suplier" }));

        fieldCariPenerimaanPrangko.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldCariPenerimaanPrangkoMouseClicked(evt);
            }
        });

        buttonCariPenerimaanPrangko.setText("Cari");
        buttonCariPenerimaanPrangko.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCariPenerimaanPrangkoActionPerformed(evt);
            }
        });

        buttonTambahPenerimaanPrangko.setText("Tambah Penerimaan");
        buttonTambahPenerimaanPrangko.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahPenerimaanPrangkoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addComponent(buttonTambahPenerimaanPrangko)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 603, Short.MAX_VALUE)
                .addComponent(comboCariPenerimaanPrangko, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldCariPenerimaanPrangko, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCariPenerimaanPrangko))
            .addComponent(jScrollPane13)
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCariPenerimaanPrangko)
                    .addComponent(fieldCariPenerimaanPrangko, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCariPenerimaanPrangko, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTambahPenerimaanPrangko, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Prangko3Layout = new javax.swing.GroupLayout(Prangko3);
        Prangko3.setLayout(Prangko3Layout);
        Prangko3Layout.setHorizontalGroup(
            Prangko3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel40, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Prangko3Layout.setVerticalGroup(
            Prangko3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        buttonTambahPenerimaanDokumenFilateli.addTab("Prangko", Prangko3);

        MS_SS3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MS_SS3MouseClicked(evt);
            }
        });

        jPanel41.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabel Data Produk"));

        tablePenerimaanMS_SS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePenerimaanMS_SS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePenerimaanMS_SSMouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(tablePenerimaanMS_SS);

        comboCariPenerimaanMS_SS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nomor Order", "Tanggal Penerimaan", "Nomor Pemesanan", "Kode Produk", "Nama Produk", "Nominal", "Tahun", "Nama Suplier" }));

        fieldCariPenerimaanMS_SS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldCariPenerimaanMS_SSMouseClicked(evt);
            }
        });

        buttonCariPenerimaanMS_SS.setText("Cari");
        buttonCariPenerimaanMS_SS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCariPenerimaanMS_SSActionPerformed(evt);
            }
        });

        buttonTambahPenerimaanMSSS.setText("Tambah Penerimaan");
        buttonTambahPenerimaanMSSS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahPenerimaanMSSSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane14)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addComponent(buttonTambahPenerimaanMSSS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 603, Short.MAX_VALUE)
                .addComponent(comboCariPenerimaanMS_SS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldCariPenerimaanMS_SS, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCariPenerimaanMS_SS))
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCariPenerimaanMS_SS)
                    .addComponent(fieldCariPenerimaanMS_SS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCariPenerimaanMS_SS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTambahPenerimaanMSSS, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MS_SS3Layout = new javax.swing.GroupLayout(MS_SS3);
        MS_SS3.setLayout(MS_SS3Layout);
        MS_SS3Layout.setHorizontalGroup(
            MS_SS3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MS_SS3Layout.setVerticalGroup(
            MS_SS3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        buttonTambahPenerimaanDokumenFilateli.addTab("MS & SS", MS_SS3);

        SHP_SHPSS3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SHP_SHPSS3MouseClicked(evt);
            }
        });

        jPanel42.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabel Data Produk"));

        tablePenerimaanSHP_SHPSS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePenerimaanSHP_SHPSS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePenerimaanSHP_SHPSSMouseClicked(evt);
            }
        });
        jScrollPane15.setViewportView(tablePenerimaanSHP_SHPSS);

        comboCariPenerimaanSHP_SHPSS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nomor Order", "Tanggal Penerimaan", "Nomor Pemesanan", "Kode Produk", "Nama Produk", "Nominal", "Tahun", "Nama Suplier" }));

        fieldCariPenerimaanSHP_SHPSS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldCariPenerimaanSHP_SHPSSMouseClicked(evt);
            }
        });

        buttonCariPenerimaanSHP_SHPSS.setText("Cari");
        buttonCariPenerimaanSHP_SHPSS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCariPenerimaanSHP_SHPSSActionPerformed(evt);
            }
        });

        buttonTambahPenerimaanSHPSS.setText("Tambah Penerimaan");
        buttonTambahPenerimaanSHPSS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahPenerimaanSHPSSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane15)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addComponent(buttonTambahPenerimaanSHPSS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 603, Short.MAX_VALUE)
                .addComponent(comboCariPenerimaanSHP_SHPSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldCariPenerimaanSHP_SHPSS, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCariPenerimaanSHP_SHPSS))
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel42Layout.createSequentialGroup()
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCariPenerimaanSHP_SHPSS)
                    .addComponent(fieldCariPenerimaanSHP_SHPSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCariPenerimaanSHP_SHPSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTambahPenerimaanSHPSS, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SHP_SHPSS3Layout = new javax.swing.GroupLayout(SHP_SHPSS3);
        SHP_SHPSS3.setLayout(SHP_SHPSS3Layout);
        SHP_SHPSS3Layout.setHorizontalGroup(
            SHP_SHPSS3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        SHP_SHPSS3Layout.setVerticalGroup(
            SHP_SHPSS3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        buttonTambahPenerimaanDokumenFilateli.addTab("SHP & SHPSS", SHP_SHPSS3);

        Kemasan3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Kemasan3MouseClicked(evt);
            }
        });

        jPanel43.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabel Data Produk"));

        tablePenerimaanKemasan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePenerimaanKemasan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePenerimaanKemasanMouseClicked(evt);
            }
        });
        jScrollPane16.setViewportView(tablePenerimaanKemasan);

        comboCariPenerimaanKemasan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nomor Order", "Tanggal Penerimaan", "Nomor Pemesanan", "Kode Produk", "Nama Produk", "Nominal", "Tahun", "Nama Suplier" }));

        fieldCariPenerimaanKemasan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldCariPenerimaanKemasanMouseClicked(evt);
            }
        });

        buttonCariPenerimaanKemasan.setText("Cari");
        buttonCariPenerimaanKemasan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCariPenerimaanKemasanActionPerformed(evt);
            }
        });

        buttonTambahPenerimaanKemasan.setText("Tambah Penerimaan");
        buttonTambahPenerimaanKemasan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahPenerimaanKemasanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane16)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addComponent(buttonTambahPenerimaanKemasan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 603, Short.MAX_VALUE)
                .addComponent(comboCariPenerimaanKemasan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldCariPenerimaanKemasan, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCariPenerimaanKemasan))
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel43Layout.createSequentialGroup()
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCariPenerimaanKemasan)
                    .addComponent(fieldCariPenerimaanKemasan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCariPenerimaanKemasan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTambahPenerimaanKemasan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Kemasan3Layout = new javax.swing.GroupLayout(Kemasan3);
        Kemasan3.setLayout(Kemasan3Layout);
        Kemasan3Layout.setHorizontalGroup(
            Kemasan3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Kemasan3Layout.setVerticalGroup(
            Kemasan3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        buttonTambahPenerimaanDokumenFilateli.addTab("Kemasan", Kemasan3);

        jPanel44.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabel Data Produk"));

        tablePenerimaanMerchandise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePenerimaanMerchandise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePenerimaanMerchandiseMouseClicked(evt);
            }
        });
        jScrollPane17.setViewportView(tablePenerimaanMerchandise);

        comboCariPenerimaanMerchandise.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nomor Order", "Tanggal Penerimaan", "Nomor Pemesanan", "Kode Produk", "Nama Produk", "Nominal", "Tahun", "Nama Suplier" }));

        fieldCariPenerimaanMerchandise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldCariPenerimaanMerchandiseMouseClicked(evt);
            }
        });

        buttonCariPenerimaanMerchandise.setText("Cari");
        buttonCariPenerimaanMerchandise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCariPenerimaanMerchandiseActionPerformed(evt);
            }
        });

        buttonTambahPenerimaanMerchandise.setText("Tambah Penerimaan");
        buttonTambahPenerimaanMerchandise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahPenerimaanMerchandiseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel44Layout = new javax.swing.GroupLayout(jPanel44);
        jPanel44.setLayout(jPanel44Layout);
        jPanel44Layout.setHorizontalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane17)
            .addGroup(jPanel44Layout.createSequentialGroup()
                .addComponent(buttonTambahPenerimaanMerchandise)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 603, Short.MAX_VALUE)
                .addComponent(comboCariPenerimaanMerchandise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldCariPenerimaanMerchandise, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCariPenerimaanMerchandise))
        );
        jPanel44Layout.setVerticalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel44Layout.createSequentialGroup()
                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCariPenerimaanMerchandise)
                    .addComponent(fieldCariPenerimaanMerchandise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCariPenerimaanMerchandise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTambahPenerimaanMerchandise, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Merchandise3Layout = new javax.swing.GroupLayout(Merchandise3);
        Merchandise3.setLayout(Merchandise3Layout);
        Merchandise3Layout.setHorizontalGroup(
            Merchandise3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Merchandise3Layout.setVerticalGroup(
            Merchandise3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        buttonTambahPenerimaanDokumenFilateli.addTab("Merchandise", Merchandise3);

        jPanel45.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabel Data Produk"));

        tablePenerimaanPrisma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePenerimaanPrisma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePenerimaanPrismaMouseClicked(evt);
            }
        });
        jScrollPane18.setViewportView(tablePenerimaanPrisma);

        comboCariPenerimaanPrisma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nomor Order", "Tanggal Penerimaan", "Nomor Pemesanan", "Kode Produk", "Nama Produk", "Nominal", "Tahun", "Nama Suplier" }));

        fieldCariPenerimaanPrisma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldCariPenerimaanPrismaMouseClicked(evt);
            }
        });

        buttonCariPenerimaanPrisma.setText("Cari");
        buttonCariPenerimaanPrisma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCariPenerimaanPrismaActionPerformed(evt);
            }
        });

        buttonTambahPenerimaanPrisma.setText("Tambah Penerimaan");
        buttonTambahPenerimaanPrisma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahPenerimaanPrismaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel45Layout = new javax.swing.GroupLayout(jPanel45);
        jPanel45.setLayout(jPanel45Layout);
        jPanel45Layout.setHorizontalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane18)
            .addGroup(jPanel45Layout.createSequentialGroup()
                .addComponent(buttonTambahPenerimaanPrisma)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 603, Short.MAX_VALUE)
                .addComponent(comboCariPenerimaanPrisma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldCariPenerimaanPrisma, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCariPenerimaanPrisma))
        );
        jPanel45Layout.setVerticalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel45Layout.createSequentialGroup()
                .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCariPenerimaanPrisma)
                    .addComponent(fieldCariPenerimaanPrisma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCariPenerimaanPrisma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTambahPenerimaanPrisma, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Prisma3Layout = new javax.swing.GroupLayout(Prisma3);
        Prisma3.setLayout(Prisma3Layout);
        Prisma3Layout.setHorizontalGroup(
            Prisma3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Prisma3Layout.setVerticalGroup(
            Prisma3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        buttonTambahPenerimaanDokumenFilateli.addTab("Prisma", Prisma3);

        jPanel46.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabel Data Produk"));

        tablePenerimaanDokumenFilateli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePenerimaanDokumenFilateli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePenerimaanDokumenFilateliMouseClicked(evt);
            }
        });
        jScrollPane19.setViewportView(tablePenerimaanDokumenFilateli);

        comboCariPenerimaanDF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nomor Order", "Tanggal Penerimaan", "Nomor Pemesanan", "Kode Produk", "Nama Produk", "Nominal", "Tahun", "Nama Suplier" }));

        fieldCariPenerimaanDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldCariPenerimaanDFMouseClicked(evt);
            }
        });

        buttonCariPenerimaanDF.setText("Cari");
        buttonCariPenerimaanDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCariPenerimaanDFActionPerformed(evt);
            }
        });

        jButton7.setText("Tambah Penerimaan");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel46Layout = new javax.swing.GroupLayout(jPanel46);
        jPanel46.setLayout(jPanel46Layout);
        jPanel46Layout.setHorizontalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane19)
            .addGroup(jPanel46Layout.createSequentialGroup()
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 603, Short.MAX_VALUE)
                .addComponent(comboCariPenerimaanDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldCariPenerimaanDF, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCariPenerimaanDF))
        );
        jPanel46Layout.setVerticalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel46Layout.createSequentialGroup()
                .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCariPenerimaanDF)
                    .addComponent(fieldCariPenerimaanDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCariPenerimaanDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout DokumenFilateli3Layout = new javax.swing.GroupLayout(DokumenFilateli3);
        DokumenFilateli3.setLayout(DokumenFilateli3Layout);
        DokumenFilateli3Layout.setHorizontalGroup(
            DokumenFilateli3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        DokumenFilateli3Layout.setVerticalGroup(
            DokumenFilateli3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        buttonTambahPenerimaanDokumenFilateli.addTab("Dokumen Filateli", DokumenFilateli3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonTambahPenerimaanDokumenFilateli)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonTambahPenerimaanDokumenFilateli)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void MS_SS3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MS_SS3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_MS_SS3MouseClicked

    private void SHP_SHPSS3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SHP_SHPSS3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_SHP_SHPSS3MouseClicked

    private void Kemasan3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Kemasan3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Kemasan3MouseClicked

    private void buttonTambahPenerimaanDokumenFilateliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonTambahPenerimaanDokumenFilateliMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonTambahPenerimaanDokumenFilateliMouseClicked

    private void getDataPenerimaan(){
        dao = new PenerimaanDAOImpl();
        ArrayList<Penerimaan> arrayPenerimaanPrangko = new ArrayList<>();
        ArrayList<Penerimaan> arrayPenerimaanMSSS = new ArrayList<>();
        ArrayList<Penerimaan> arrayPenerimaanSHPSS = new ArrayList<>();
        ArrayList<Penerimaan> arrayPenerimaanKemasan = new ArrayList<>();
        ArrayList<Penerimaan> arrayPenerimaanMerchandise = new ArrayList<>();
        ArrayList<Penerimaan> arrayPenerimaanPrisma = new ArrayList<>();
        ArrayList<Penerimaan> arrayPenerimaanDokumenFilateli = new ArrayList<>();
       
        arrayPenerimaan = dao.getDataPenerimaan();
        for (int i = 0; i < arrayPenerimaan.size(); i++) {
            String kode_produk = arrayPenerimaan.get(i).getIdProduk();
            String jenis_produk = kode_produk.substring(0,2);
            
                if(jenis_produk.compareTo("PR")==0){
                    Penerimaan pn = new Penerimaan();
                    pn.setNoOrder(arrayPenerimaan.get(i).getNoOrder());
                    pn.setTglPenerimaan(arrayPenerimaan.get(i).getTglPenerimaan());
                    pn.setJmlTerima(arrayPenerimaan.get(i).getJmlTerima());
                    pn.setNoPemesanan(arrayPenerimaan.get(i).getNoPemesanan());
                    pn.setIdProduk(arrayPenerimaan.get(i).getIdProduk());
                    pn.setNamaProduk(arrayPenerimaan.get(i).getNamaProduk());
                    pn.setNominal(arrayPenerimaan.get(i).getNominal());
                    pn.setTahun(arrayPenerimaan.get(i).getTahun());
                    pn.setStokAwal(arrayPenerimaan.get(i).getStokAwal());
                    pn.setStokAkhir(arrayPenerimaan.get(i).getStokAkhir());
                    pn.setNamaMitra(arrayPenerimaan.get(i).getNamaMitra());
                    pn.setSubTotalTerima(arrayPenerimaan.get(i).getSubTotalTerima());
                    pn.setSisaBelumDikirim(arrayPenerimaan.get(i).getSisaBelumDikirim());
                    pn.setKeterangan(arrayPenerimaan.get(i).getKeterangan());
                    
                    arrayPenerimaanPrangko.add(pn);
                } else if (jenis_produk.compareTo("MS")==0 || jenis_produk.compareTo("SS")==0){
                    Penerimaan pn = new Penerimaan();
                    pn.setNoOrder(arrayPenerimaan.get(i).getNoOrder());
                    pn.setTglPenerimaan(arrayPenerimaan.get(i).getTglPenerimaan());
                    pn.setJmlTerima(arrayPenerimaan.get(i).getJmlTerima());
                    pn.setNoPemesanan(arrayPenerimaan.get(i).getNoPemesanan());
                    pn.setIdProduk(arrayPenerimaan.get(i).getIdProduk());
                    pn.setNamaProduk(arrayPenerimaan.get(i).getNamaProduk());
                    pn.setNominal(arrayPenerimaan.get(i).getNominal());
                    pn.setTahun(arrayPenerimaan.get(i).getTahun());
                    pn.setStokAwal(arrayPenerimaan.get(i).getStokAwal());
                    pn.setStokAkhir(arrayPenerimaan.get(i).getStokAkhir());
                    pn.setNamaMitra(arrayPenerimaan.get(i).getNamaMitra());
                    pn.setSubTotalTerima(arrayPenerimaan.get(i).getSubTotalTerima());
                    pn.setSisaBelumDikirim(arrayPenerimaan.get(i).getSisaBelumDikirim());
                    pn.setKeterangan(arrayPenerimaan.get(i).getKeterangan());
                    
                    arrayPenerimaanMSSS.add(pn);
                }else if (jenis_produk.compareTo("PS")==0){
                    Penerimaan pn = new Penerimaan();
                    pn.setNoOrder(arrayPenerimaan.get(i).getNoOrder());
                    pn.setTglPenerimaan(arrayPenerimaan.get(i).getTglPenerimaan());
                    pn.setJmlTerima(arrayPenerimaan.get(i).getJmlTerima());
                    pn.setNoPemesanan(arrayPenerimaan.get(i).getNoPemesanan());
                    pn.setIdProduk(arrayPenerimaan.get(i).getIdProduk());
                    pn.setNamaProduk(arrayPenerimaan.get(i).getNamaProduk());
                    pn.setNominal(arrayPenerimaan.get(i).getNominal());
                    pn.setTahun(arrayPenerimaan.get(i).getTahun());
                    pn.setStokAwal(arrayPenerimaan.get(i).getStokAwal());
                    pn.setStokAkhir(arrayPenerimaan.get(i).getStokAkhir());
                    pn.setNamaMitra(arrayPenerimaan.get(i).getNamaMitra());
                    pn.setSubTotalTerima(arrayPenerimaan.get(i).getSubTotalTerima());
                    pn.setSisaBelumDikirim(arrayPenerimaan.get(i).getSisaBelumDikirim());
                    pn.setKeterangan(arrayPenerimaan.get(i).getKeterangan());
                    
                    arrayPenerimaanPrisma.add(pn);
                }else if (jenis_produk.compareTo("SH")==0){
                    Penerimaan pn = new Penerimaan();
                    pn.setNoOrder(arrayPenerimaan.get(i).getNoOrder());
                    pn.setTglPenerimaan(arrayPenerimaan.get(i).getTglPenerimaan());
                    pn.setJmlTerima(arrayPenerimaan.get(i).getJmlTerima());
                    pn.setNoPemesanan(arrayPenerimaan.get(i).getNoPemesanan());
                    pn.setIdProduk(arrayPenerimaan.get(i).getIdProduk());
                    pn.setNamaProduk(arrayPenerimaan.get(i).getNamaProduk());
                    pn.setNominal(arrayPenerimaan.get(i).getNominal());
                    pn.setTahun(arrayPenerimaan.get(i).getTahun());
                    pn.setStokAwal(arrayPenerimaan.get(i).getStokAwal());
                    pn.setStokAkhir(arrayPenerimaan.get(i).getStokAkhir());
                    pn.setNamaMitra(arrayPenerimaan.get(i).getNamaMitra());
                    pn.setSubTotalTerima(arrayPenerimaan.get(i).getSubTotalTerima());
                    pn.setSisaBelumDikirim(arrayPenerimaan.get(i).getSisaBelumDikirim());
                    pn.setKeterangan(arrayPenerimaan.get(i).getKeterangan());
                    
                    arrayPenerimaanSHPSS.add(pn);
                }else if (jenis_produk.compareTo("KM")==0){
                    Penerimaan pn = new Penerimaan();
                    pn.setNoOrder(arrayPenerimaan.get(i).getNoOrder());
                    pn.setTglPenerimaan(arrayPenerimaan.get(i).getTglPenerimaan());
                    pn.setJmlTerima(arrayPenerimaan.get(i).getJmlTerima());
                    pn.setNoPemesanan(arrayPenerimaan.get(i).getNoPemesanan());
                    pn.setIdProduk(arrayPenerimaan.get(i).getIdProduk());
                    pn.setNamaProduk(arrayPenerimaan.get(i).getNamaProduk());
                    pn.setNominal(arrayPenerimaan.get(i).getNominal());
                    pn.setTahun(arrayPenerimaan.get(i).getTahun());
                    pn.setStokAwal(arrayPenerimaan.get(i).getStokAwal());
                    pn.setStokAkhir(arrayPenerimaan.get(i).getStokAkhir());
                    pn.setNamaMitra(arrayPenerimaan.get(i).getNamaMitra());
                    pn.setSubTotalTerima(arrayPenerimaan.get(i).getSubTotalTerima());
                    pn.setSisaBelumDikirim(arrayPenerimaan.get(i).getSisaBelumDikirim());
                    pn.setKeterangan(arrayPenerimaan.get(i).getKeterangan());
                    
                    arrayPenerimaanKemasan.add(pn);
                }else if (jenis_produk.compareTo("MC")==0){
                    Penerimaan pn = new Penerimaan();
                    pn.setNoOrder(arrayPenerimaan.get(i).getNoOrder());
                    pn.setTglPenerimaan(arrayPenerimaan.get(i).getTglPenerimaan());
                    pn.setJmlTerima(arrayPenerimaan.get(i).getJmlTerima());
                    pn.setNoPemesanan(arrayPenerimaan.get(i).getNoPemesanan());
                    pn.setIdProduk(arrayPenerimaan.get(i).getIdProduk());
                    pn.setNamaProduk(arrayPenerimaan.get(i).getNamaProduk());
                    pn.setNominal(arrayPenerimaan.get(i).getNominal());
                    pn.setTahun(arrayPenerimaan.get(i).getTahun());
                    pn.setStokAwal(arrayPenerimaan.get(i).getStokAwal());
                    pn.setStokAkhir(arrayPenerimaan.get(i).getStokAkhir());
                    pn.setNamaMitra(arrayPenerimaan.get(i).getNamaMitra());
                    pn.setSubTotalTerima(arrayPenerimaan.get(i).getSubTotalTerima());
                    pn.setSisaBelumDikirim(arrayPenerimaan.get(i).getSisaBelumDikirim());
                    pn.setKeterangan(arrayPenerimaan.get(i).getKeterangan());
                    
                    arrayPenerimaanMerchandise.add(pn);
                }else if (jenis_produk.compareTo("DF")==0){
                    Penerimaan pn = new Penerimaan();
                    pn.setNoOrder(arrayPenerimaan.get(i).getNoOrder());
                    pn.setTglPenerimaan(arrayPenerimaan.get(i).getTglPenerimaan());
                    pn.setJmlTerima(arrayPenerimaan.get(i).getJmlTerima());
                    pn.setNoPemesanan(arrayPenerimaan.get(i).getNoPemesanan());
                    pn.setIdProduk(arrayPenerimaan.get(i).getIdProduk());
                    pn.setNamaProduk(arrayPenerimaan.get(i).getNamaProduk());
                    pn.setNominal(arrayPenerimaan.get(i).getNominal());
                    pn.setTahun(arrayPenerimaan.get(i).getTahun());
                    pn.setStokAwal(arrayPenerimaan.get(i).getStokAwal());
                    pn.setStokAkhir(arrayPenerimaan.get(i).getStokAkhir());
                    pn.setNamaMitra(arrayPenerimaan.get(i).getNamaMitra());
                    pn.setSubTotalTerima(arrayPenerimaan.get(i).getSubTotalTerima());
                    pn.setSisaBelumDikirim(arrayPenerimaan.get(i).getSisaBelumDikirim());
                    pn.setKeterangan(arrayPenerimaan.get(i).getKeterangan());
                    
                    arrayPenerimaanDokumenFilateli.add(pn);
                }
        }
        
        PenerimaanTM penerimaanTM = new PenerimaanTM();
        penerimaanTM.setDataPenerimaan(arrayPenerimaanPrangko);
        sorter = new TableRowSorter(penerimaanTM);
        tablePenerimaanPrangko.setRowSorter(sorter);
        tablePenerimaanPrangko.setModel(penerimaanTM);
        
        PenerimaanTM penerimaanTM1 = new PenerimaanTM();
        penerimaanTM1.setDataPenerimaan(arrayPenerimaanMSSS);
        sorter = new TableRowSorter(penerimaanTM1);
        tablePenerimaanMS_SS.setRowSorter(sorter);
        tablePenerimaanMS_SS.setModel(penerimaanTM1);
        
        PenerimaanTM penerimaanTM2 = new PenerimaanTM();
        penerimaanTM2.setDataPenerimaan(arrayPenerimaanPrisma);
        sorter = new TableRowSorter(penerimaanTM2);
        tablePenerimaanPrisma.setRowSorter(sorter);
        tablePenerimaanPrisma.setModel(penerimaanTM2);
        
        PenerimaanTM penerimaanTM3 = new PenerimaanTM();
        penerimaanTM3.setDataPenerimaan(arrayPenerimaanSHPSS);
        sorter = new TableRowSorter(penerimaanTM3);
        tablePenerimaanSHP_SHPSS.setRowSorter(sorter);
        tablePenerimaanSHP_SHPSS.setModel(penerimaanTM3);
        
        PenerimaanTM penerimaanTM4 = new PenerimaanTM();
        penerimaanTM4.setDataPenerimaan(arrayPenerimaanKemasan);
        sorter = new TableRowSorter(penerimaanTM4);
        tablePenerimaanKemasan.setRowSorter(sorter);
        tablePenerimaanKemasan.setModel(penerimaanTM4);
        
        PenerimaanTM penerimaanTM5 = new PenerimaanTM();
        penerimaanTM5.setDataPenerimaan(arrayPenerimaanMerchandise);
        sorter = new TableRowSorter(penerimaanTM5);
        tablePenerimaanMerchandise.setRowSorter(sorter);
        tablePenerimaanMerchandise.setModel(penerimaanTM5);
        
        PenerimaanTM penerimaanTM6 = new PenerimaanTM();
        penerimaanTM6.setDataPenerimaan(arrayPenerimaanDokumenFilateli);
        sorter = new TableRowSorter(penerimaanTM6);
        tablePenerimaanDokumenFilateli.setRowSorter(sorter);
        tablePenerimaanDokumenFilateli.setModel(penerimaanTM6);
    }
    
    
    private void Prangko3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Prangko3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Prangko3MouseClicked

    private void buttonTambahPenerimaanPrangkoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahPenerimaanPrangkoActionPerformed
        // TODO add your handling code here:
        FormHome formHome = new FormHome();
        boolean rootPaneCheckingEnabled = true;
        new DialogTambahPenerimaan(formHome, rootPaneCheckingEnabled).setVisible(true);
        getDataPenerimaan();
    }//GEN-LAST:event_buttonTambahPenerimaanPrangkoActionPerformed

    private void buttonCariPenerimaanPrangkoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCariPenerimaanPrangkoActionPerformed
        // TODO add your handling code here:
        String keyword = fieldCariPenerimaanPrangko.getText();
        String status = "prangko";
        String tabCari = cariJenis(status);
        String jenisCari = cariData(tabCari);
        String idJenis = cariJenis(status);

        // lakukan proses pencarian
        dao = new PenerimaanDAOImpl();
        arrayPenerimaan = dao.cariProdukPenerimaan(keyword, jenisCari, idJenis);
        for (int i = 0; i < arrayPenerimaan.size(); i++) {
            arrayProduk = dao.getNama(arrayPenerimaan.get(i).getIdProduk());
            arrayPemesanan = dao.getNoPemesanan(arrayPenerimaan.get(i).getIdPemesanan());
            
        }
        
        PenerimaanTM penerimaanTableModel = new PenerimaanTM();
        penerimaanTableModel.setDataPenerimaan(arrayPenerimaan);
        sorter = new TableRowSorter(penerimaanTableModel);
        tablePenerimaanPrangko.setRowSorter(sorter);

        tablePenerimaanPrangko.setModel(penerimaanTableModel);
    }//GEN-LAST:event_buttonCariPenerimaanPrangkoActionPerformed

    private void fieldCariPenerimaanPrangkoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldCariPenerimaanPrangkoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCariPenerimaanPrangkoMouseClicked

    private void tablePenerimaanPrangkoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePenerimaanPrangkoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablePenerimaanPrangkoMouseClicked

    private void tablePenerimaanMS_SSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePenerimaanMS_SSMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablePenerimaanMS_SSMouseClicked

    private void fieldCariPenerimaanMS_SSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldCariPenerimaanMS_SSMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCariPenerimaanMS_SSMouseClicked

    private void buttonCariPenerimaanMS_SSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCariPenerimaanMS_SSActionPerformed
        // TODO add your handling code here:
   
        String keyword = fieldCariPenerimaanMS_SS.getText();
        String status = "ss";
        String tabCari = cariJenis(status);
        String jenisCari = cariData(tabCari);
        String idJenis = cariJenis(status);

        // lakukan proses pencarian
        dao = new PenerimaanDAOImpl();
        arrayPenerimaan = dao.cariProdukPenerimaan(keyword, jenisCari, idJenis);
        for (int i = 0; i < arrayPenerimaan.size(); i++) {
            arrayProduk = dao.getNama(arrayPenerimaan.get(i).getIdProduk());
            arrayPemesanan = dao.getNoPemesanan(arrayPenerimaan.get(i).getIdPemesanan());
            
        }
        
        PenerimaanTM penerimaanTableModel = new PenerimaanTM();
        penerimaanTableModel.setDataPenerimaan(arrayPenerimaan);
        sorter = new TableRowSorter(penerimaanTableModel);
        tablePenerimaanMS_SS.setRowSorter(sorter);

        tablePenerimaanMS_SS.setModel(penerimaanTableModel);
    }//GEN-LAST:event_buttonCariPenerimaanMS_SSActionPerformed

    private void buttonTambahPenerimaanMSSSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahPenerimaanMSSSActionPerformed
        // TODO add your handling code here:
        FormHome formHome = new FormHome();
        boolean rootPaneCheckingEnabled = true;
        new DialogTambahPenerimaan(formHome, rootPaneCheckingEnabled).setVisible(true);
        getDataPenerimaan();
    }//GEN-LAST:event_buttonTambahPenerimaanMSSSActionPerformed

    private void tablePenerimaanSHP_SHPSSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePenerimaanSHP_SHPSSMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablePenerimaanSHP_SHPSSMouseClicked

    private void fieldCariPenerimaanSHP_SHPSSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldCariPenerimaanSHP_SHPSSMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCariPenerimaanSHP_SHPSSMouseClicked

    private void buttonCariPenerimaanSHP_SHPSSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCariPenerimaanSHP_SHPSSActionPerformed
        // TODO add your handling code here:
        String keyword = fieldCariPenerimaanSHP_SHPSS.getText();
        String status = "shp";
        String tabCari = cariJenis(status);
        String jenisCari = cariData(tabCari);
        String idJenis = cariJenis(status);

        // lakukan proses pencarian
        dao = new PenerimaanDAOImpl();
        arrayPenerimaan = dao.cariProdukPenerimaan(keyword, jenisCari, idJenis);
        for (int i = 0; i < arrayPenerimaan.size(); i++) {
            arrayProduk = dao.getNama(arrayPenerimaan.get(i).getIdProduk());
            arrayPemesanan = dao.getNoPemesanan(arrayPenerimaan.get(i).getIdPemesanan());
            
        }
                
        PenerimaanTM penerimaanTableModel = new PenerimaanTM();
        penerimaanTableModel.setDataPenerimaan(arrayPenerimaan);
        sorter = new TableRowSorter(penerimaanTableModel);
        tablePenerimaanSHP_SHPSS.setRowSorter(sorter);

        tablePenerimaanSHP_SHPSS.setModel(penerimaanTableModel);
    }//GEN-LAST:event_buttonCariPenerimaanSHP_SHPSSActionPerformed

    private void buttonTambahPenerimaanSHPSSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahPenerimaanSHPSSActionPerformed
        // TODO add your handling code here:
        FormHome formHome = new FormHome();
        boolean rootPaneCheckingEnabled = true;
        new DialogTambahPenerimaan(formHome, rootPaneCheckingEnabled).setVisible(true);
        getDataPenerimaan();
    }//GEN-LAST:event_buttonTambahPenerimaanSHPSSActionPerformed

    private void tablePenerimaanKemasanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePenerimaanKemasanMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablePenerimaanKemasanMouseClicked

    private void fieldCariPenerimaanKemasanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldCariPenerimaanKemasanMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCariPenerimaanKemasanMouseClicked

    private void buttonCariPenerimaanKemasanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCariPenerimaanKemasanActionPerformed
        // TODO add your handling code here:
        String keyword = fieldCariPenerimaanKemasan.getText();
        String status = "kemasan";
        String tabCari = cariJenis(status);
        String jenisCari = cariData(tabCari);
        String idJenis = cariJenis(status);

        // lakukan proses pencarian
        dao = new PenerimaanDAOImpl();
        arrayPenerimaan = dao.cariProdukPenerimaan(keyword, jenisCari, idJenis);
        for (int i = 0; i < arrayPenerimaan.size(); i++) {
            arrayProduk = dao.getNama(arrayPenerimaan.get(i).getIdProduk());
            arrayPemesanan = dao.getNoPemesanan(arrayPenerimaan.get(i).getIdPemesanan());
            
        }
        
        PenerimaanTM penerimaanTableModel = new PenerimaanTM();
        penerimaanTableModel.setDataPenerimaan(arrayPenerimaan);
        sorter = new TableRowSorter(penerimaanTableModel);
        tablePenerimaanKemasan.setRowSorter(sorter);

        tablePenerimaanKemasan.setModel(penerimaanTableModel);
    }//GEN-LAST:event_buttonCariPenerimaanKemasanActionPerformed

    private void buttonTambahPenerimaanKemasanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahPenerimaanKemasanActionPerformed
        // TODO add your handling code here:
        FormHome formHome = new FormHome();
        boolean rootPaneCheckingEnabled = true;
        new DialogTambahPenerimaan(formHome, rootPaneCheckingEnabled).setVisible(true);
        getDataPenerimaan();
    }//GEN-LAST:event_buttonTambahPenerimaanKemasanActionPerformed

    private void tablePenerimaanMerchandiseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePenerimaanMerchandiseMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablePenerimaanMerchandiseMouseClicked

    private void fieldCariPenerimaanMerchandiseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldCariPenerimaanMerchandiseMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCariPenerimaanMerchandiseMouseClicked

    private void buttonCariPenerimaanMerchandiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCariPenerimaanMerchandiseActionPerformed
        // TODO add your handling code here:
        String keyword = fieldCariPenerimaanMerchandise.getText();
        String status = "mc";
        String tabCari = cariJenis(status);
        String jenisCari = cariData(tabCari);
        String idJenis = cariJenis(status);

        // lakukan proses pencarian
        dao = new PenerimaanDAOImpl();
        arrayPenerimaan = dao.cariProdukPenerimaan(keyword, jenisCari, idJenis);
        for (int i = 0; i < arrayPenerimaan.size(); i++) {
            arrayProduk = dao.getNama(arrayPenerimaan.get(i).getIdProduk());
            arrayPemesanan = dao.getNoPemesanan(arrayPenerimaan.get(i).getIdPemesanan());
            
        }
               
        PenerimaanTM penerimaanTableModel = new PenerimaanTM();
        penerimaanTableModel.setDataPenerimaan(arrayPenerimaan);
        sorter = new TableRowSorter(penerimaanTableModel);
        tablePenerimaanMerchandise.setRowSorter(sorter);

        tablePenerimaanMerchandise.setModel(penerimaanTableModel);
    }//GEN-LAST:event_buttonCariPenerimaanMerchandiseActionPerformed

    private void buttonTambahPenerimaanMerchandiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahPenerimaanMerchandiseActionPerformed
        // TODO add your handling code here:
        FormHome formHome = new FormHome();
        boolean rootPaneCheckingEnabled = true;
        new DialogTambahPenerimaan(formHome, rootPaneCheckingEnabled).setVisible(true);
        getDataPenerimaan();
    }//GEN-LAST:event_buttonTambahPenerimaanMerchandiseActionPerformed

    private void tablePenerimaanPrismaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePenerimaanPrismaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablePenerimaanPrismaMouseClicked

    private void fieldCariPenerimaanPrismaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldCariPenerimaanPrismaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCariPenerimaanPrismaMouseClicked

    private void buttonCariPenerimaanPrismaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCariPenerimaanPrismaActionPerformed
        // TODO add your handling code here:
        String keyword = fieldCariPenerimaanPrisma.getText();
        String status = "prisma";
        String tabCari = cariJenis(status);
        String jenisCari = cariData(tabCari);
        String idJenis = cariJenis(status);

        // lakukan proses pencarian
        dao = new PenerimaanDAOImpl();
        arrayPenerimaan = dao.cariProdukPenerimaan(keyword, jenisCari, idJenis);
        for (int i = 0; i < arrayPenerimaan.size(); i++) {
            arrayProduk = dao.getNama(arrayPenerimaan.get(i).getIdProduk());
            arrayPemesanan = dao.getNoPemesanan(arrayPenerimaan.get(i).getIdPemesanan());
            
        }
        
        PenerimaanTM penerimaanTableModel = new PenerimaanTM();
        penerimaanTableModel.setDataPenerimaan(arrayPenerimaan);
        sorter = new TableRowSorter(penerimaanTableModel);
        tablePenerimaanPrisma.setRowSorter(sorter);

        tablePenerimaanPrisma.setModel(penerimaanTableModel);
    }//GEN-LAST:event_buttonCariPenerimaanPrismaActionPerformed

    private void buttonTambahPenerimaanPrismaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahPenerimaanPrismaActionPerformed
        // TODO add your handling code here:
        FormHome formHome = new FormHome();
        boolean rootPaneCheckingEnabled = true;
        new DialogTambahPenerimaan(formHome, rootPaneCheckingEnabled).setVisible(true);
        getDataPenerimaan();
    }//GEN-LAST:event_buttonTambahPenerimaanPrismaActionPerformed

    private void tablePenerimaanDokumenFilateliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePenerimaanDokumenFilateliMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablePenerimaanDokumenFilateliMouseClicked

    private void fieldCariPenerimaanDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldCariPenerimaanDFMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCariPenerimaanDFMouseClicked

    private void buttonCariPenerimaanDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCariPenerimaanDFActionPerformed
        // TODO add your handling code here:
        String keyword = fieldCariPenerimaanDF.getText();
        String status = "df";
        String tabCari = cariJenis(status);
        String jenisCari = cariData(tabCari);
        String idJenis = cariJenis(status);

        // lakukan proses pencarian
        dao = new PenerimaanDAOImpl();
        arrayPenerimaan = dao.cariProdukPenerimaan(keyword, jenisCari, idJenis);
        for (int i = 0; i < arrayPenerimaan.size(); i++) {
            arrayProduk = dao.getNama(arrayPenerimaan.get(i).getIdProduk());
            arrayPemesanan = dao.getNoPemesanan(arrayPenerimaan.get(i).getIdPemesanan());
            
        }
        
        PenerimaanTM penerimaanTableModel = new PenerimaanTM();
        penerimaanTableModel.setDataPenerimaan(arrayPenerimaan);
        sorter = new TableRowSorter(penerimaanTableModel);
        tablePenerimaanDokumenFilateli.setRowSorter(sorter);

        tablePenerimaanDokumenFilateli.setModel(penerimaanTableModel);
    }//GEN-LAST:event_buttonCariPenerimaanDFActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        FormHome formHome = new FormHome();
        boolean rootPaneCheckingEnabled = true;
        new DialogTambahPenerimaan(formHome, rootPaneCheckingEnabled).setVisible(true);
        getDataPenerimaan();
    }//GEN-LAST:event_jButton7ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DokumenFilateli3;
    private javax.swing.JPanel Kemasan3;
    private javax.swing.JPanel MS_SS3;
    private javax.swing.JPanel Merchandise3;
    private javax.swing.JPanel Prangko3;
    private javax.swing.JPanel Prisma3;
    private javax.swing.JPanel SHP_SHPSS3;
    private javax.swing.JButton buttonCariPenerimaanDF;
    private javax.swing.JButton buttonCariPenerimaanKemasan;
    private javax.swing.JButton buttonCariPenerimaanMS_SS;
    private javax.swing.JButton buttonCariPenerimaanMerchandise;
    private javax.swing.JButton buttonCariPenerimaanPrangko;
    private javax.swing.JButton buttonCariPenerimaanPrisma;
    private javax.swing.JButton buttonCariPenerimaanSHP_SHPSS;
    private javax.swing.JTabbedPane buttonTambahPenerimaanDokumenFilateli;
    private javax.swing.JButton buttonTambahPenerimaanKemasan;
    private javax.swing.JButton buttonTambahPenerimaanMSSS;
    private javax.swing.JButton buttonTambahPenerimaanMerchandise;
    private javax.swing.JButton buttonTambahPenerimaanPrangko;
    private javax.swing.JButton buttonTambahPenerimaanPrisma;
    private javax.swing.JButton buttonTambahPenerimaanSHPSS;
    private javax.swing.JComboBox<String> comboCariPenerimaanDF;
    private javax.swing.JComboBox<String> comboCariPenerimaanKemasan;
    private javax.swing.JComboBox<String> comboCariPenerimaanMS_SS;
    private javax.swing.JComboBox<String> comboCariPenerimaanMerchandise;
    private javax.swing.JComboBox<String> comboCariPenerimaanPrangko;
    private javax.swing.JComboBox<String> comboCariPenerimaanPrisma;
    private javax.swing.JComboBox<String> comboCariPenerimaanSHP_SHPSS;
    private javax.swing.JTextField fieldCariPenerimaanDF;
    private javax.swing.JTextField fieldCariPenerimaanKemasan;
    private javax.swing.JTextField fieldCariPenerimaanMS_SS;
    private javax.swing.JTextField fieldCariPenerimaanMerchandise;
    private javax.swing.JTextField fieldCariPenerimaanPrangko;
    private javax.swing.JTextField fieldCariPenerimaanPrisma;
    private javax.swing.JTextField fieldCariPenerimaanSHP_SHPSS;
    private javax.swing.JButton jButton7;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JTable tablePenerimaanDokumenFilateli;
    private javax.swing.JTable tablePenerimaanKemasan;
    private javax.swing.JTable tablePenerimaanMS_SS;
    private javax.swing.JTable tablePenerimaanMerchandise;
    private javax.swing.JTable tablePenerimaanPrangko;
    private javax.swing.JTable tablePenerimaanPrisma;
    private javax.swing.JTable tablePenerimaanSHP_SHPSS;
    // End of variables declaration//GEN-END:variables
}
